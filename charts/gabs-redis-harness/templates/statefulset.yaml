apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "gabs-redis-harness.fullname" . }}
  labels:
    {{- include "gabs-redis-harness.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "gabs-redis-harness.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "gabs-redis-harness.labels" . | nindent 8 }}
	{{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "gabs-redis-harness.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.full_image_name }}"
          command: ["redis-server"]
          args: ["/redis-master/redis.conf"]
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
          - mountPath: /redis-master-data
            name: data
          - mountPath: /redis-master
            name: config
        - name: redis-exporter
          image: oliver006/redis_exporter:latest
          securityContext:
            runAsUser: 59000
            runAsGroup: 59000
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 9121	    
      volumes:
      - name: data
        emptyDir: {}
      - name: config
        configMap:
          name: redis-configmap
          items:
          - key: redis-config
            path: redis.conf

